%!PS
%%Title: image-scale.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5c
%%CreationDate: Wed Aug 24 12:54:22 2011
%%Orientation: Landscape
%%Pages: 3
%%BoundingBox: 0 0 842 1190
%%DocumentPaperSizes: a3
%%BeginSetup
[{
%%BeginFeature: *PageRegion A3
<</PageSize [842 1190]>> setpagedevice
%%EndFeature
} stopped cleartomark
%%EndSetup
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 1190 moveto 0 0 lineto 842 0 lineto 842 1190 lineto closepath clip newpath
$F2psBegin
10 setmiterlimit
0 slj 0 slc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
initmatrix
%
% Fig objects follow
%
% 
% here starts figure with depth 50
/o0 {% Polyline
0 slj
0 slc
7.500 slw
n 2025 2025 m 3375 2025 l 3375 4725 l 2025 4725 l
 cp gs col0 s gr 
} bind def
/o1 {% Polyline
n 2025 2025 m
 3375 4725 l gs col0 s gr 
} bind def
/o2 {% Polyline
n 3375 2025 m
 2025 4725 l gs col0 s gr 
} bind def
/o3 {% Polyline
n 18225 9000 m 18225 10800 l 14625 10800 l 14625 9000 l
 cp gs col0 s gr 
} bind def
/o4 {% Polyline
n 14625 9000 m
 18225 10800 l gs col0 s gr 
} bind def
/o5 {% Polyline
n 18225 9000 m
 14625 10800 l gs col0 s gr 
} bind def
/o6 {% Polyline
n 15975 2475 m 16875 2475 l 16875 4275 l 15975 4275 l
 cp gs col0 s gr 
} bind def
/o7 {% Polyline
n 15975 2475 m
 16875 4275 l gs col0 s gr 
} bind def
/o8 {% Polyline
n 16875 2475 m
 15975 4275 l gs col0 s gr 
} bind def
/o9 {% Polyline
n 11025 1575 m 12825 1575 l 12825 5175 l 11025 5175 l
 cp gs col0 s gr 
} bind def
/o10 {% Polyline
n 11025 1575 m
 12825 5175 l gs col0 s gr 
} bind def
/o11 {% Polyline
n 12825 1575 m
 11025 5175 l gs col0 s gr 
} bind def
/o12 {% Polyline
n 12825 9450 m 12825 10350 l 11025 10350 l 11025 9450 l
 cp gs col0 s gr 
} bind def
/o13 {% Polyline
n 11025 9450 m
 12825 10350 l gs col0 s gr 
} bind def
/o14 {% Polyline
n 12825 9450 m
 11025 10350 l gs col0 s gr 
} bind def
/o15 {% Polyline
n 2025 15525 m 3375 15525 l 3375 18225 l 2025 18225 l
 cp gs col0 s gr 
} bind def
/o16 {% Polyline
n 2025 15525 m
 3375 18225 l gs col0 s gr 
} bind def
/o17 {% Polyline
n 3375 15525 m
 2025 18225 l gs col0 s gr 
} bind def
/o18 {% Polyline
n 4050 9225 m 4050 10575 l 1350 10575 l 1350 9225 l
 cp gs col0 s gr 
} bind def
/o19 {% Polyline
n 1350 9225 m
 4050 10575 l gs col0 s gr 
} bind def
/o20 {% Polyline
n 4050 9225 m
 1350 10575 l gs col0 s gr 
} bind def
/o21 {% Polyline
n 4050 22725 m 4050 24075 l 1350 24075 l 1350 22725 l
 cp gs col0 s gr 
} bind def
/o22 {% Polyline
n 1350 22725 m
 4050 24075 l gs col0 s gr 
} bind def
/o23 {% Polyline
n 4050 22725 m
 1350 24075 l gs col0 s gr 
} bind def
/o24 {% Polyline
n 6975 15975 m
 7875 17775 l gs col0 s gr 
} bind def
/o25 {% Polyline
n 7875 15975 m
 6975 17775 l gs col0 s gr 
} bind def
/o26 {% Polyline
 [15 45] 45 sd
n 6975 17775 m
 6525 18675 l gs col0 s gr  [] 0 sd
} bind def
/o27 {% Polyline
 [15 45] 45 sd
n 7875 17775 m
 8325 18675 l gs col0 s gr  [] 0 sd
} bind def
/o28 {% Polyline
 [15 45] 45 sd
n 7875 15975 m
 8325 15075 l gs col0 s gr  [] 0 sd
} bind def
/o29 {% Polyline
 [15 45] 45 sd
n 6975 15975 m
 6525 15075 l gs col0 s gr  [] 0 sd
} bind def
/o30 {% Polyline
n 6525 15975 m
 6525 17775 l gs col0 s gr 
} bind def
/o31 {% Polyline
n 8325 15975 m
 8325 17775 l gs col0 s gr 
} bind def
/o32 {% Polyline
 [15 45] 45 sd
n 6525 15975 m 6525 15075 l 8325 15075 l
 8325 15975 l gs col0 s gr  [] 0 sd
} bind def
/o33 {% Polyline
 [15 45] 45 sd
n 6525 17775 m 6525 18675 l 8325 18675 l
 8325 17775 l gs col0 s gr  [] 0 sd
} bind def
/o34 {% Polyline
n 8325 9000 m 8325 10800 l 6525 10800 l 6525 9000 l
 cp gs col0 s gr 
} bind def
/o35 {% Polyline
n 6525 9000 m
 8325 10800 l gs col0 s gr 
} bind def
/o36 {% Polyline
n 8325 9000 m
 6525 10800 l gs col0 s gr 
} bind def
/o37 {% Polyline
n 6525 2475 m 8325 2475 l 8325 4275 l 6525 4275 l
 cp gs col0 s gr 
} bind def
/o38 {% Polyline
n 6525 2475 m
 8325 4275 l gs col0 s gr 
} bind def
/o39 {% Polyline
n 8325 2475 m
 6525 4275 l gs col0 s gr 
} bind def
/o40 {% Polyline
n 12825 22950 m 12825 23850 l 11025 23850 l 11025 22950 l
 cp gs col0 s gr 
} bind def
/o41 {% Polyline
n 11025 22950 m
 12825 23850 l gs col0 s gr 
} bind def
/o42 {% Polyline
n 12825 22950 m
 11025 23850 l gs col0 s gr 
} bind def
/o43 {% Polyline
n 11025 23850 m 12825 23850 l 12825 24300 l 11025 24300 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 735.00 1590.00] PATmp PATsp ef gr PATusp gs col0 s gr 
} bind def
/o44 {% Polyline
n 11475 15975 m
 12375 17775 l gs col0 s gr 
} bind def
/o45 {% Polyline
n 12375 15975 m
 11475 17775 l gs col0 s gr 
} bind def
/o46 {% Polyline
60.000 slw
 [60] 0 sd
n 11025 22500 m 12825 22500 l 12825 24300 l 11025 24300 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o47 {% Polyline
7.500 slw
n 11025 15975 m 11475 15975 l 11475 17775 l 11025 17775 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 735.00 1065.00] PATmp PATsp ef gr PATusp gs col0 s gr 
} bind def
/o48 {% Polyline
n 12375 15975 m 12825 15975 l 12825 17775 l 12375 17775 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 825.00 1065.00] PATmp PATsp ef gr PATusp gs col0 s gr 
} bind def
/o49 {% Polyline
60.000 slw
 [60] 0 sd
n 11025 15975 m 12825 15975 l 12825 17775 l 11025 17775 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o50 {% Polyline
7.500 slw
n 11475 15975 m 12375 15975 l 12375 17775 l 11475 17775 l
 cp gs col0 s gr 
} bind def
/o51 {% Polyline
n 11025 22500 m 12825 22500 l 12825 22950 l 11025 22950 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 735.00 1500.00] PATmp PATsp ef gr PATusp gs col0 s gr 
} bind def
/o52 {% Polyline
n 17325 22950 m 17325 23850 l 15525 23850 l 15525 22950 l
 cp gs col0 s gr 
} bind def
/o53 {% Polyline
n 15525 22950 m
 17325 23850 l gs col0 s gr 
} bind def
/o54 {% Polyline
n 17325 22950 m
 15525 23850 l gs col0 s gr 
} bind def
/o55 {% Polyline
n 15975 15975 m
 16875 17775 l gs col0 s gr 
} bind def
/o56 {% Polyline
n 16875 15975 m
 15975 17775 l gs col0 s gr 
} bind def
/o57 {% Polyline
60.000 slw
 [60] 0 sd
n 15525 22500 m 17325 22500 l 17325 24300 l 15525 24300 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o58 {% Polyline
 [60] 0 sd
n 15525 15975 m 17325 15975 l 17325 17775 l 15525 17775 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o59 {% Polyline
7.500 slw
n 15975 15975 m 16875 15975 l 16875 17775 l 15975 17775 l
 cp gs col0 s gr 
} bind def
/o60 {% Polyline
n 6525 23850 m
 8325 22950 l gs col0 s gr 
} bind def
/o61 {% Polyline
n 6525 22950 m
 8325 23850 l gs col0 s gr 
} bind def
/o62 {% Polyline
 [15 45] 45 sd
n 8325 23850 m
 9225 24300 l gs col0 s gr  [] 0 sd
} bind def
/o63 {% Polyline
 [15 45] 45 sd
n 8325 22950 m
 9225 22500 l gs col0 s gr  [] 0 sd
} bind def
/o64 {% Polyline
 [15 45] 45 sd
n 6525 22950 m
 5625 22500 l gs col0 s gr  [] 0 sd
} bind def
/o65 {% Polyline
 [15 45] 45 sd
n 6525 23850 m
 5625 24300 l gs col0 s gr  [] 0 sd
} bind def
/o66 {% Polyline
n 6525 24300 m
 8325 24300 l gs col0 s gr 
} bind def
/o67 {% Polyline
n 6525 22500 m
 8325 22500 l gs col0 s gr 
} bind def
/o68 {% Polyline
 [15 45] 45 sd
n 6525 24300 m 5625 24300 l 5625 22500 l
 6525 22500 l gs col0 s gr  [] 0 sd
} bind def
/o69 {% Polyline
 [15 45] 45 sd
n 8325 24300 m 9225 24300 l 9225 22500 l
 8325 22500 l gs col0 s gr  [] 0 sd
} bind def
/o70 {% Polyline
 [15 45] 45 sd
n 5175 0 m
 5175 6525 l gs col0 s gr  [] 0 sd
} bind def
/o71 {% Polyline
 [15 45] 45 sd
n 9675 0 m
 9675 6525 l gs col0 s gr  [] 0 sd
} bind def
/o72 {% Polyline
 [15 45] 45 sd
n 14175 0 m
 14175 6525 l gs col0 s gr  [] 0 sd
} bind def
/o73 {% Polyline
 [15 45] 45 sd
n 18675 0 m
 18675 6525 l gs col0 s gr  [] 0 sd
} bind def
/o74 {% Polyline
 [15 45] 45 sd
n 0 0 m
 18675 0 l gs col0 s gr  [] 0 sd
} bind def
/o75 {% Polyline
 [15 45] 45 sd
n 5175 6525 m
 5175 13050 l gs col0 s gr  [] 0 sd
} bind def
/o76 {% Polyline
 [15 45] 45 sd
n 0 0 m
 0 6525 l gs col0 s gr  [] 0 sd
} bind def
/o77 {% Polyline
 [15 45] 45 sd
n 0 6525 m
 0 13050 l gs col0 s gr  [] 0 sd
} bind def
/o78 {% Polyline
60.000 slw
 [60] 0 sd
n 6525 9000 m 8325 9000 l 8325 10800 l 6525 10800 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o79 {% Polyline
7.500 slw
 [15 45] 45 sd
n 9675 6525 m
 9675 13050 l gs col0 s gr  [] 0 sd
} bind def
/o80 {% Polyline
 [15 45] 45 sd
n 14175 6525 m
 14175 13050 l gs col0 s gr  [] 0 sd
} bind def
/o81 {% Polyline
 [15 45] 45 sd
n 18675 6525 m
 18675 13050 l gs col0 s gr  [] 0 sd
} bind def
/o82 {% Polyline
 [15 45] 45 sd
n 0 13050 m
 18675 13050 l gs col0 s gr  [] 0 sd
} bind def
/o83 {% Polyline
60.000 slw
 [60] 0 sd
n 6525 2475 m 8325 2475 l 8325 4275 l 6525 4275 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o84 {% Polyline
 [60] 0 sd
n 11025 2475 m
 11025 4275 l gs col1 s gr  [] 0 sd
} bind def
/o85 {% Polyline
 [60] 0 sd
n 12825 2475 m
 12825 4275 l gs col1 s gr  [] 0 sd
} bind def
/o86 {% Polyline
 [60] 0 sd
n 11025 9000 m
 11025 10800 l gs col1 s gr  [] 0 sd
} bind def
/o87 {% Polyline
 [60] 0 sd
n 12825 9000 m
 12825 10800 l gs col1 s gr  [] 0 sd
} bind def
/o88 {% Polyline
 [60] 0 sd
n 15525 9000 m
 17325 9000 l gs col1 s gr  [] 0 sd
} bind def
/o89 {% Polyline
 [60] 0 sd
n 15525 2475 m
 17325 2475 l gs col1 s gr  [] 0 sd
} bind def
/o90 {% Polyline
 [60] 0 sd
n 15525 4275 m
 17325 4275 l gs col1 s gr  [] 0 sd
} bind def
/o91 {% Polyline
7.500 slw
 [15 45] 45 sd
n 5175 13500 m
 5175 20025 l gs col0 s gr  [] 0 sd
} bind def
/o92 {% Polyline
 [15 45] 45 sd
n 9675 13500 m
 9675 20025 l gs col0 s gr  [] 0 sd
} bind def
/o93 {% Polyline
 [15 45] 45 sd
n 14175 13500 m
 14175 20025 l gs col0 s gr  [] 0 sd
} bind def
/o94 {% Polyline
 [15 45] 45 sd
n 18675 13500 m
 18675 20025 l gs col0 s gr  [] 0 sd
} bind def
/o95 {% Polyline
 [15 45] 45 sd
n 0 13500 m
 18675 13500 l gs col0 s gr  [] 0 sd
} bind def
/o96 {% Polyline
 [15 45] 45 sd
n 5175 20025 m
 5175 26550 l gs col0 s gr  [] 0 sd
} bind def
/o97 {% Polyline
 [15 45] 45 sd
n 0 13500 m
 0 20025 l gs col0 s gr  [] 0 sd
} bind def
/o98 {% Polyline
 [15 45] 45 sd
n 0 20025 m
 0 26550 l gs col0 s gr  [] 0 sd
} bind def
/o99 {% Polyline
60.000 slw
 [60] 0 sd
n 6525 22500 m 8325 22500 l 8325 24300 l 6525 24300 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o100 {% Polyline
7.500 slw
 [15 45] 45 sd
n 9675 20025 m
 9675 26550 l gs col0 s gr  [] 0 sd
} bind def
/o101 {% Polyline
 [15 45] 45 sd
n 14175 20025 m
 14175 26550 l gs col0 s gr  [] 0 sd
} bind def
/o102 {% Polyline
 [15 45] 45 sd
n 18675 20025 m
 18675 26550 l gs col0 s gr  [] 0 sd
} bind def
/o103 {% Polyline
 [15 45] 45 sd
n 0 26550 m
 18675 26550 l gs col0 s gr  [] 0 sd
} bind def
/o104 {% Polyline
60.000 slw
 [60] 0 sd
n 6525 15975 m 8325 15975 l 8325 17775 l 6525 17775 l
 cp gs col1 s gr  [] 0 sd
} bind def
/o105 {% Polyline
 [60] 0 sd
n 15525 10800 m
 17325 10800 l gs col1 s gr  [] 0 sd
} bind def
/o106 {% Polyline
30.000 slw
gs  clippath
9135 4024 m 9135 4290 l 9315 4290 l 9315 4024 l 9315 4024 l 9225 4204 l 9135 4024 l cp
9315 2726 m 9315 2460 l 9135 2460 l 9135 2726 l 9135 2726 l 9225 2546 l 9315 2726 l cp
eoclip
n 9225 2475 m
 9225 4275 l gs col1 s gr gr

% arrowhead
60.000 slw
n 9315 2726 m 9225 2546 l 9135 2726 l  col1 s
% arrowhead
n 9135 4024 m 9225 4204 l 9315 4024 l  col1 s
} bind def
/o107 {% Polyline
30.000 slw
n 9450 4275 m
 9000 4275 l gs col1 s gr 
} bind def
/o108 {% Polyline
n 9450 2475 m
 9000 2475 l gs col1 s gr 
} bind def
/o109 {% Polyline
gs  clippath
8074 1665 m 8340 1665 l 8340 1485 l 8074 1485 l 8074 1485 l 8254 1575 l 8074 1665 l cp
6776 1485 m 6510 1485 l 6510 1665 l 6776 1665 l 6776 1665 l 6596 1575 l 6776 1485 l cp
eoclip
n 6525 1575 m
 8325 1575 l gs col1 s gr gr

% arrowhead
60.000 slw
n 6776 1485 m 6596 1575 l 6776 1665 l  col1 s
% arrowhead
n 8074 1665 m 8254 1575 l 8074 1485 l  col1 s
} bind def
/o110 {% Polyline
30.000 slw
n 6525 1350 m
 6525 1800 l gs col1 s gr 
} bind def
/o111 {% Polyline
n 8325 1350 m
 8325 1800 l gs col1 s gr 
} bind def
/o112 {% Polyline
7.500 slw
n 5955 6075 m 5850 6075 5850 7095 105 arcto 4 {pop} repeat
  5850 7200 9120 7200 105 arcto 4 {pop} repeat
  9225 7200 9225 6180 105 arcto 4 {pop} repeat
  9225 6075 5955 6075 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
} bind def
/o113 {/Times-Roman-iso ff 190.50 scf sf
11250 14175 m
gs 1 -1 sc (img_WxH-fill.jpg) col0 sh gr
} bind def
/o114 {/Times-Roman-iso ff 190.50 scf sf
15750 14175 m
gs 1 -1 sc (img_WxH-fit.jpg) col0 sh gr
} bind def
/o115 {/Times-Roman-iso ff 190.50 scf sf
6750 14175 m
gs 1 -1 sc (img_WxH-crop.jpg) col0 sh gr
} bind def
/o116 {/Times-Roman-iso ff 190.50 scf sf
6750 675 m
gs 1 -1 sc (img_WxH.jpg) col0 sh gr
} bind def
/o117 {/Times-Roman-iso ff 190.50 scf sf
11250 675 m
gs 1 -1 sc (img_Wx.jpg) col0 sh gr
} bind def
/o118 {/Times-Roman-iso ff 190.50 scf sf
15750 675 m
gs 1 -1 sc (img_xH.jpg) col0 sh gr
} bind def
/o119 {/Times-Roman-iso ff 190.50 scf sf
2250 675 m
gs 1 -1 sc (img.jpg) col0 sh gr
} bind def
/o120 {/Times-Roman-iso ff 190.50 scf sf
2250 14175 m
gs 1 -1 sc (img.jpg) col0 sh gr
} bind def
/o121 {/Times-Roman-iso ff 190.50 scf sf
2025 900 m
gs 1 -1 sc (\(original image\)) col0 sh gr
} bind def
/o122 {/Times-Roman-iso ff 190.50 scf sf
2025 14400 m
gs 1 -1 sc (\(original image\)) col0 sh gr
} bind def
/o123 {/Times-Roman-iso ff 190.50 scf sf
9000 3375 m
gs 1 -1 sc (H) col0 sh gr
} bind def
/o124 {/Times-Roman-iso ff 190.50 scf sf
7425 1800 m
gs 1 -1 sc (W) col0 sh gr
} bind def
/o125 {/Times-Roman-iso ff 285.75 scf sf
6075 6525 m
gs 1 -1 sc (Nonproportional resize,) col0 sh gr
} bind def
/o126 {/Times-Roman-iso ff 285.75 scf sf
6525 6975 m
gs 1 -1 sc (not normally used!) col0 sh gr
} bind def
%%EndProlog
%%Page: 1 1
pageheader
%%BeginPageSetup
 90 rot
 1 -1 sc
%%EndPageSetup
gs
-0.0 -0.0 tr
 0.063 0.063 sc
o0 
o1 o2 o3 o4 o5 o6 o7 o8 o9 o10 o11 o12 o13 o14 o15 o16 o17 o18 o19 o20 
o21 o22 o23 o24 o25 o26 o27 o28 o29 o30 o31 o32 o33 o34 o35 o36 o37 o38 o39 o40 
o41 o42 o43 o44 o45 o46 o47 o48 o49 o50 o51 o52 o53 o54 o55 o56 o57 o58 o59 o60 
o61 o62 o63 o64 o65 o66 o67 o68 o69 o70 o71 o72 o73 o74 o75 o76 o77 o78 o79 o80 
o81 o82 o83 o84 o85 o86 o87 o88 o89 o90 o91 o92 o93 o94 o95 o96 o97 o98 o99 o100 
o101 o102 o103 o104 o105 o106 o107 o108 o109 o110 o111 o112 o113 o114 o115 o116 o117 o118 o119 o120 
o121 o122 o123 o124 o125 o126 gr
pagefooter
showpage
%%Page: 2 2
pageheader
%%BeginPageSetup
 90 rot
 1 -1 sc
%%EndPageSetup
gs
-0.0 -842.0 tr
 0.063 0.063 sc
o0 
o1 o2 o3 o4 o5 o6 o7 o8 o9 o10 o11 o12 o13 o14 o15 o16 o17 o18 o19 o20 
o21 o22 o23 o24 o25 o26 o27 o28 o29 o30 o31 o32 o33 o34 o35 o36 o37 o38 o39 o40 
o41 o42 o43 o44 o45 o46 o47 o48 o49 o50 o51 o52 o53 o54 o55 o56 o57 o58 o59 o60 
o61 o62 o63 o64 o65 o66 o67 o68 o69 o70 o71 o72 o73 o74 o75 o76 o77 o78 o79 o80 
o81 o82 o83 o84 o85 o86 o87 o88 o89 o90 o91 o92 o93 o94 o95 o96 o97 o98 o99 o100 
o101 o102 o103 o104 o105 o106 o107 o108 o109 o110 o111 o112 o113 o114 o115 o116 o117 o118 o119 o120 
o121 o122 o123 o124 o125 o126 gr
pagefooter
showpage
% here ends figure;
%%Trailer
end
%EOF
